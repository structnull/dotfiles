unbind C-b
set -g prefix M-a
bind M-a send-prefix
set -g history-limit 10000
set -g default-terminal "${TERM}"
set -g default-terminal "screen-256color"
set-option -sg escape-time 10
set-option -gw xterm-keys on
set-option -g focus-events on
set-option -g status-keys vi
set-option -g automatic-rename on
set-option -g status-interval 1
set-window-option -g mode-keys vi
set-option -sa terminal-features ',${TERM}:RGB'
set -s copy-command 'wl-copy'


set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM 

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

set -g allow-rename on
set -g set-titles on
setw -g monitor-activity on
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'


bind-key x kill-pane
bind-key & kill-window
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "Config successfully reloaded!"
bind-key W choose-tree -Zw "swap-window -t '%%'"
bind-key P choose-tree -Zw "swap-pane -t '%%'"
bind C-l send-keys 'C-l'
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind-key -n C-right next-window
bind-key -n C-left  previous-window	
bind-key -n C-k next-window
bind-key -n C-j previous-window	

set -g mouse on
set-option -g status-left-length 50
set-option -g status-right-length 10
set-option -g status-justify centre

set-option -g status-style "fg=#7C7D83 bg=default" # default will set the background to transparent

set-option -g window-status-format "#{window_index}:#{window_name}#{window_flags} " # window_name -> pane_current_command
set-option -g window-status-current-format "#{window_index}:#{window_name}#{window_flags} "
set-option -g window-status-current-style "fg=#dcc7a0"
set-option -g window-status-activity-style none
set -g status-right '#[fg=#7C7D83,bold] %H:%M:%S %p '
set-option -g status-left "#[fg=#7C7D83,bold][#{session_name}]#[fg=#7C7D83,bold]:#[fg=#7C7D83]#(whoami) "
set -g pane-active-border-style fg='#EE6D85'
set -wg mode-style bg='#FFFFFF',fg='#01011f'
set -g message-style bg='#000000',fg='#FFFFFF'


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

